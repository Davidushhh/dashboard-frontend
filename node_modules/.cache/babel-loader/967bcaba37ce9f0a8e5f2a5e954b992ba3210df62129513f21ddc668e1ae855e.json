{"ast":null,"code":"var _jsxFileName = \"/Users/dreamstore/Desktop/ODA/dashbord-front/src/components/MainLayout/PageLayout/LayoutGrid/LayoutGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport ResponsiveLayout from \"../../../ResponsiveLayout/ResponsiveLayout\";\nimport { TestChartContainer } from \"../TestChartContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerSizes = {\n  xs: {\n    w: 4,\n    h: 1\n  },\n  s: {\n    w: 4,\n    h: 2\n  },\n  m: {\n    w: 4,\n    h: 4\n  },\n  lh: {\n    w: 8,\n    h: 4\n  },\n  lv: {\n    w: 4,\n    h: 8\n  },\n  xl: {\n    w: 8,\n    h: 8\n  },\n  fs: {\n    w: 12,\n    h: 8\n  }\n};\nconst layout = [{\n  i: \"a\",\n  x: 0,\n  y: 0,\n  w: 1,\n  h: 2\n}];\nexport const LayoutGrid = _ref => {\n  _s();\n  let {\n    currentPageConfig\n  } = _ref;\n  const [layout, setLayout] = useState([]);\n  useEffect(() => {\n    if (currentPageConfig) {\n      console.log(currentPageConfig);\n      const {\n        charts\n      } = currentPageConfig;\n      if (charts) return;\n      for (const chart of charts) {\n        const {\n          id: i,\n          size,\n          location: {\n            y,\n            x\n          }\n        } = chart;\n        const {\n          w,\n          h\n        } = containerSizes[size];\n        let data = {\n          i,\n          w,\n          h,\n          x,\n          y\n        };\n        setLayout([...layout, data]);\n      }\n    }\n  }, [currentPageConfig]);\n  return /*#__PURE__*/_jsxDEV(ResponsiveLayout, {\n    layout: layout,\n    setLayout: setLayout,\n    children: layout.map(elem => /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(TestChartContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, elem.i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutGrid, \"XLCnRwdQpCU9xW+dC2g7NYOqtVc=\");\n_c = LayoutGrid;\nvar _c;\n$RefreshReg$(_c, \"LayoutGrid\");","map":{"version":3,"names":["React","useEffect","useState","Box","ResponsiveLayout","TestChartContainer","jsxDEV","_jsxDEV","containerSizes","xs","w","h","s","m","lh","lv","xl","fs","layout","i","x","y","LayoutGrid","_ref","_s","currentPageConfig","setLayout","console","log","charts","chart","id","size","location","data","children","map","elem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dreamstore/Desktop/ODA/dashbord-front/src/components/MainLayout/PageLayout/LayoutGrid/LayoutGrid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport ResponsiveLayout from \"../../../ResponsiveLayout/ResponsiveLayout\";\nimport { TestChartContainer } from \"../TestChartContainer\";\n\nconst containerSizes = {\n  xs: { w: 4, h: 1 },\n  s: { w: 4, h: 2 },\n  m: { w: 4, h: 4 },\n  lh: { w: 8, h: 4 },\n  lv: { w: 4, h: 8 },\n  xl: { w: 8, h: 8 },\n  fs: { w: 12, h: 8 },\n};\n\nconst layout = [{ i: \"a\", x: 0, y: 0, w: 1, h: 2 }];\n\nexport const LayoutGrid = ({ currentPageConfig }) => {\n  const [layout, setLayout] = useState([]);\n\n  useEffect(() => {\n    if (currentPageConfig) {\n      console.log(currentPageConfig);\n      const { charts } = currentPageConfig;\n      if (charts) return;\n      for (const chart of charts) {\n        const {\n          id: i,\n          size,\n          location: { y, x },\n        } = chart;\n        const { w, h } = containerSizes[size];\n        let data = { i, w, h, x, y };\n        setLayout([...layout, data]);\n      }\n    }\n  }, [currentPageConfig]);\n  return (\n    <ResponsiveLayout layout={layout} setLayout={setLayout}>\n      {layout.map((elem) => (\n        <Box key={elem.i}>\n          <TestChartContainer />\n        </Box>\n      ))}\n    </ResponsiveLayout>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,eAAe;AAEnC,OAAOC,gBAAgB,MAAM,4CAA4C;AACzE,SAASC,kBAAkB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAG;EACrBC,EAAE,EAAE;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EAClBC,CAAC,EAAE;IAAEF,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EACjBE,CAAC,EAAE;IAAEH,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EACjBG,EAAE,EAAE;IAAEJ,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EAClBI,EAAE,EAAE;IAAEL,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EAClBK,EAAE,EAAE;IAAEN,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EAClBM,EAAE,EAAE;IAAEP,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAE;AACpB,CAAC;AAED,MAAMO,MAAM,GAAG,CAAC;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEX,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE;AAAE,CAAC,CAAC;AAEnD,OAAO,MAAMW,UAAU,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC;EAAkB,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACL,MAAM,EAAEQ,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,IAAIwB,iBAAiB,EAAE;MACrBE,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAAC;MAC9B,MAAM;QAAEI;MAAO,CAAC,GAAGJ,iBAAiB;MACpC,IAAII,MAAM,EAAE;MACZ,KAAK,MAAMC,KAAK,IAAID,MAAM,EAAE;QAC1B,MAAM;UACJE,EAAE,EAAEZ,CAAC;UACLa,IAAI;UACJC,QAAQ,EAAE;YAAEZ,CAAC;YAAED;UAAE;QACnB,CAAC,GAAGU,KAAK;QACT,MAAM;UAAEpB,CAAC;UAAEC;QAAE,CAAC,GAAGH,cAAc,CAACwB,IAAI,CAAC;QACrC,IAAIE,IAAI,GAAG;UAAEf,CAAC;UAAET,CAAC;UAAEC,CAAC;UAAES,CAAC;UAAEC;QAAE,CAAC;QAC5BK,SAAS,CAAC,CAAC,GAAGR,MAAM,EAAEgB,IAAI,CAAC,CAAC;MAC9B;IACF;EACF,CAAC,EAAE,CAACT,iBAAiB,CAAC,CAAC;EACvB,oBACElB,OAAA,CAACH,gBAAgB;IAACc,MAAM,EAAEA,MAAO;IAACQ,SAAS,EAAEA,SAAU;IAAAS,QAAA,EACpDjB,MAAM,CAACkB,GAAG,CAAEC,IAAI,iBACf9B,OAAA,CAACJ,GAAG;MAAAgC,QAAA,eACF5B,OAAA,CAACF,kBAAkB;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADdJ,IAAI,CAAClB,CAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEvB,CAAC;AAACjB,EAAA,CA7BWF,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}