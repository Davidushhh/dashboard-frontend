{"ast":null,"code":"var _jsxFileName = \"/Users/dreamstore/Desktop/ODA/dashbord-front/src/components/ResponsiveLayout/ResponsiveLayout.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n_c = ResponsiveGridLayout;\nconst breakpoints = {\n  lg: 1200,\n  md: 996,\n  sm: 768,\n  xs: 480,\n  xxs: 0\n};\nconst cols = {\n  lg: 12,\n  md: 10,\n  sm: 6,\n  xs: 4,\n  xxs: 2\n};\nconst ResponsiveLayout = _ref => {\n  _s();\n  let {\n    layoutData,\n    children\n  } = _ref;\n  const [layout\n  // setLayout\n  ] = useState(JSON.parse(localStorage.getItem(\"layout\")) || layoutData);\n\n  // для тесту\n  const randomColor = () => {\n    const color = Math.floor(Math.random() * 16777215).toString(16);\n    return `#${color}`;\n  };\n  console.log(randomColor);\n\n  // збереження зміни координат\n  const onLayoutChange = newLayout => {\n    console.log(newLayout);\n    setLayout(newLayout);\n    localStorage.setItem(\"layout\", JSON.stringify(newLayout));\n  };\n  return /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n    className: \"layout\",\n    layouts: {\n      lg: layout\n    },\n    breakpoints: breakpoints,\n    cols: cols,\n    rowHeight: 100\n    // useCSSTransforms - оптимізація\n    ,\n    useCSSTransforms: true\n    // compactType - прилипання - горизонтальне або вертикальне\n    ,\n    compactType: \"horizontal\"\n    // autoSize={true}\n    // onLayoutChange={onLayoutChange}\n    ,\n    preventCollision: true,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ResponsiveLayout, \"FVjQXRxrFFF3Z5q0AZqpKw6q318=\");\n_c2 = ResponsiveLayout;\nexport default ResponsiveLayout;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResponsiveGridLayout\");\n$RefreshReg$(_c2, \"ResponsiveLayout\");","map":{"version":3,"names":["useState","Responsive","WidthProvider","jsxDEV","_jsxDEV","ResponsiveGridLayout","_c","breakpoints","lg","md","sm","xs","xxs","cols","ResponsiveLayout","_ref","_s","layoutData","children","layout","JSON","parse","localStorage","getItem","randomColor","color","Math","floor","random","toString","console","log","onLayoutChange","newLayout","setLayout","setItem","stringify","className","layouts","rowHeight","useCSSTransforms","compactType","preventCollision","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/dreamstore/Desktop/ODA/dashbord-front/src/components/ResponsiveLayout/ResponsiveLayout.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst breakpoints = { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 };\nconst cols = { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 };\n\nconst ResponsiveLayout = ({ layoutData, children }) => {\n  const [\n    layout,\n    // setLayout\n  ] = useState(JSON.parse(localStorage.getItem(\"layout\")) || layoutData);\n\n  // для тесту\n  const randomColor = () => {\n    const color = Math.floor(Math.random() * 16777215).toString(16);\n\n    return `#${color}`;\n  };\n\n  console.log(randomColor);\n\n  // збереження зміни координат\n  const onLayoutChange = (newLayout) => {\n    console.log(newLayout);\n\n    setLayout(newLayout);\n    localStorage.setItem(\"layout\", JSON.stringify(newLayout));\n  };\n\n  return (\n    <ResponsiveGridLayout\n      className=\"layout\"\n      layouts={{ lg: layout }}\n      breakpoints={breakpoints}\n      cols={cols}\n      rowHeight={100}\n      // useCSSTransforms - оптимізація\n      useCSSTransforms={true}\n      // compactType - прилипання - горизонтальне або вертикальне\n      compactType={\"horizontal\"}\n      // autoSize={true}\n      // onLayoutChange={onLayoutChange}\n      preventCollision={true}\n    >\n      {children}\n    </ResponsiveGridLayout>\n  );\n};\n\nexport default ResponsiveLayout;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9D,MAAMC,oBAAoB,GAAGH,aAAa,CAACD,UAAU,CAAC;AAACK,EAAA,GAAjDD,oBAAoB;AAE1B,MAAME,WAAW,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,GAAG,EAAE;AAAE,CAAC;AACnE,MAAMC,IAAI,GAAG;EAAEL,EAAE,EAAE,EAAE;EAAEC,EAAE,EAAE,EAAE;EAAEC,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAE,CAAC;AAErD,MAAME,gBAAgB,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAChD,MAAM,CACJI;EACA;EAAA,CACD,GAAGnB,QAAQ,CAACoB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAIN,UAAU,CAAC;;EAEtE;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;IAE/D,OAAQ,IAAGJ,KAAM,EAAC;EACpB,CAAC;EAEDK,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;;EAExB;EACA,MAAMQ,cAAc,GAAIC,SAAS,IAAK;IACpCH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;IAEtBC,SAAS,CAACD,SAAS,CAAC;IACpBX,YAAY,CAACa,OAAO,CAAC,QAAQ,EAAEf,IAAI,CAACgB,SAAS,CAACH,SAAS,CAAC,CAAC;EAC3D,CAAC;EAED,oBACE7B,OAAA,CAACC,oBAAoB;IACnBgC,SAAS,EAAC,QAAQ;IAClBC,OAAO,EAAE;MAAE9B,EAAE,EAAEW;IAAO,CAAE;IACxBZ,WAAW,EAAEA,WAAY;IACzBM,IAAI,EAAEA,IAAK;IACX0B,SAAS,EAAE;IACX;IAAA;IACAC,gBAAgB,EAAE;IAClB;IAAA;IACAC,WAAW,EAAE;IACb;IACA;IAAA;IACAC,gBAAgB,EAAE,IAAK;IAAAxB,QAAA,EAEtBA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CAzCIF,gBAAgB;AAAAiC,GAAA,GAAhBjC,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAAR,EAAA,EAAAyC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}